# Generated by Django 5.1.3 on 2024-12-16 15:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название особенности (например: Wi-Fi, кондиционер)', max_length=100, unique=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to='feature/', verbose_name='Фото доп утсановок')),
            ],
        ),
        migrations.CreateModel(
            name='Functionality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Дополнительный функционал')),
            ],
        ),
        migrations.CreateModel(
            name='Safety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Системы безопасности')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('client', 'Клиент'), ('company', 'Транспортная компания')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('status', models.CharField(choices=[('legal_entity', 'Юридическое лицо'), ('individual', 'Физическое лицо')], max_length=20, verbose_name='Cтатус')),
                ('name', models.CharField(max_length=20, verbose_name='Имя клиента или организации')),
                ('surname', models.CharField(blank=True, max_length=15, null=True, verbose_name='Фамилия')),
                ('surname2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('male', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=20, null=True, verbose_name='Пол')),
                ('number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Телефоный номер')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatar_client/', verbose_name='Аватарка')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название автобуса', max_length=100, verbose_name='Название автобуса')),
                ('seats', models.PositiveIntegerField(help_text='Количество мест', verbose_name='Количество мест')),
                ('type', models.CharField(choices=[('minibus', 'Микроавтобус'), ('minivan', 'Минивен'), ('bus', 'Автобус'), ('double_bus', 'Двухэтажные'), ('long_bus', 'Дальнего следования')], max_length=15, verbose_name='Типо автобуса')),
                ('price_per_day', models.DecimalField(decimal_places=2, help_text='Стоимость аренды за день', max_digits=10, verbose_name='Стоимость аренды')),
                ('available', models.BooleanField(default=True, help_text='Доступен ли автобус для аренды', verbose_name='Доступность автобуса')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание автобуса')),
                ('image', models.ImageField(blank=True, null=True, upload_to='buses/', verbose_name='фото автобуса')),
                ('long_trips', models.BooleanField(default=False, verbose_name='Долгие поездки и аренда')),
                ('features', models.ManyToManyField(blank=True, help_text='Особенности автобуса', related_name='buses', to='busapp.feature', verbose_name='Доп функции автобуса')),
                ('functionality', models.ManyToManyField(blank=True, related_name='buses', to='busapp.functionality', verbose_name='Дополнительный функционал')),
                ('safety', models.ManyToManyField(blank=True, related_name='buses', to='busapp.safety', verbose_name='Системы безопасности')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата поездки')),
                ('status', models.CharField(choices=[('pending', 'Ожидает подтверждения'), ('confirmed', 'Подтвержден'), ('rejected', 'Отклонен')], default='pending', max_length=10, verbose_name='Статус заказа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание заказа')),
                ('full_pirce', models.TextField(blank=True, null=True, verbose_name='Финальная цена')),
                ('accept_client', models.BooleanField(blank=True, default=None, null=True, verbose_name='Ответ клиента')),
                ('end_order', models.BooleanField(blank=True, default=None, null=True, verbose_name='Завершение заказа')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='busapp.bus', verbose_name='Автобус')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='busapp.client', verbose_name='Клиент')),
            ],
        ),
        migrations.CreateModel(
            name='TransportCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='Название транспортной компании', max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('status', models.CharField(choices=[('legal_entity', 'Юридическое лицо'), ('individual', 'Физическое лицо')], max_length=20, verbose_name='Cтатус')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatar_company/', verbose_name='Аватарка')),
                ('TIN', models.CharField(blank=True, max_length=20, null=True, verbose_name='ИНН компании')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описние компнаии')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Оценка (звезды)')),
                ('text', models.TextField(verbose_name='Отзыв клиента')),
                ('response', models.TextField(blank=True, null=True, verbose_name='Ответ компании')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='busapp.client', verbose_name='Клиент')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='busapp.order', verbose_name='Заказ')),
                ('transport_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='busapp.transportcompany', verbose_name='Транспортная компания')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='transport_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='busapp.transportcompany'),
        ),
    ]
